[{"C:\\workspace\\weatherzone-react-redux\\src\\reportWebVitals.js":"1","C:\\workspace\\weatherzone-react-redux\\src\\App.tsx":"2","C:\\workspace\\weatherzone-react-redux\\src\\redux\\store.ts":"3","C:\\workspace\\weatherzone-react-redux\\src\\index.tsx":"4","C:\\workspace\\weatherzone-react-redux\\src\\components\\ForecastTable\\index.tsx":"5","C:\\workspace\\weatherzone-react-redux\\src\\components\\ForecastGraph\\index.tsx":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2614,"mtime":1612059726826,"results":"9","hashOfConfig":"8"},{"size":5006,"mtime":1612058458843,"results":"10","hashOfConfig":"8"},{"size":632,"mtime":1611965748089,"results":"11","hashOfConfig":"8"},{"size":3454,"mtime":1612057467622,"results":"12","hashOfConfig":"8"},{"size":1985,"mtime":1612057597302,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gky5si",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\workspace\\weatherzone-react-redux\\src\\reportWebVitals.js",[],"C:\\workspace\\weatherzone-react-redux\\src\\App.tsx",["27","28","29"],"C:\\workspace\\weatherzone-react-redux\\src\\redux\\store.ts",[],"C:\\workspace\\weatherzone-react-redux\\src\\index.tsx",[],"C:\\workspace\\weatherzone-react-redux\\src\\components\\ForecastTable\\index.tsx",["30","31"],"C:\\workspace\\weatherzone-react-redux\\src\\components\\ForecastGraph\\index.tsx",["32"],"import React, {useEffect, useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {  LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\n\r\nfunction ForecastGraph(props: any) {\r\n    const graphRef: any = useRef();\r\n\r\n    const [graphWidth, setGraphWidth] = useState(0);\r\n\r\n    const graphForecast = useSelector((store: any) => {\r\n        return store.graphForecast;\r\n    });\r\n\r\n    const [temp, showTemp] = useState(true);\r\n\r\n    const [humidity, showHumidity] = useState(true);\r\n\r\n    const toggleTemperature = () => {\r\n        showTemp(!temp);\r\n    };\r\n\r\n    const toggleHumidity = () => {\r\n        showHumidity(!humidity);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setGraphWidth(graphRef.current.offsetWidth - 10);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className={\"buttons-container\"}>\r\n                <input type={\"button\"} onClick={toggleTemperature} value={`${temp ? \"Hide\" : \"Show\"} Temp`}/>\r\n                <input type={\"button\"} onClick={toggleHumidity} value={`${humidity ? \"Hide\" : \"Show\"} Humidity`}/>\r\n            </div>\r\n            <div id={\"graph-container\"} ref={graphRef}>\r\n                <LineChart width={graphWidth} height={300} data={graphForecast}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis dataKey=\"humidity\" />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {temp && <Line type=\"monotone\" dataKey=\"temp\" stroke=\"#CC0000\" activeDot={{ r: 8 }} />}\r\n                    {humidity && <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#993333\" />}\r\n                    <Line type=\"monotone\" dataKey=\"feelsLike\" stroke=\"#cccc00\" />\r\n                    <Line type=\"monotone\" dataKey=\"speed\" stroke=\"#33ccff\" />\r\n                </LineChart>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForecastGraph;\r\n",{"ruleId":"33","severity":1,"message":"34","line":38,"column":19,"nodeType":"35","messageId":"36","endLine":38,"endColumn":33},{"ruleId":"37","severity":1,"message":"38","line":42,"column":8,"nodeType":"39","endLine":42,"endColumn":20,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":51,"column":8,"nodeType":"39","endLine":51,"endColumn":10,"suggestions":"41"},{"ruleId":"33","severity":1,"message":"42","line":2,"column":16,"nodeType":"35","messageId":"36","endLine":2,"endColumn":25},{"ruleId":"33","severity":1,"message":"43","line":2,"column":37,"nodeType":"35","messageId":"36","endLine":2,"endColumn":43},{"ruleId":"33","severity":1,"message":"44","line":2,"column":9,"nodeType":"35","messageId":"36","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'graphData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["45"],["46"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useDispatch' is defined but never used.",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [dispatch, locationId]",{"range":"51","text":"52"},"Update the dependencies array to be: [dispatch]",{"range":"53","text":"54"},[1437,1449],"[dispatch, locationId]",[1870,1872],"[dispatch]"]